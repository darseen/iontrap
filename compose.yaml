services:
  # Nginx Service
  nginx:
    image: nginx:1.27.5-alpine
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - public
    depends_on:
      nextjs:
        condition: service_healthy
    restart: always

  # Next.js Service
  nextjs:
    image: darseen/iontrap:latest
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file:
      - ./.env
    networks:
      - public
      - private
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      retries: 5
      start_period: 15s
      timeout: 5s
    volumes:
      - posts:/app/public/uploads
    develop:
      watch:
        - action: sync
          path: .
          target: ./app
          ignore:
            - node_modules
        - action: rebuild
          path: package.json

  # Postgres Service
  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=nextjs
      - POSTGRES_DB=iontrap
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_password
    secrets:
      - pg_password
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - private
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nextjs -d iontrap"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:8-alpine
    networks:
      - private
    volumes:
      - redis:/data
    environment:
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
    command: sh -c 'redis-server --requirepass "$$(cat /run/secrets/redis_password)"'
    secrets:
      - redis_password
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "redis-cli -a $$(cat /run/secrets/redis_password) ping | grep PONG",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

# Config

secrets:
  pg_password:
    file: ./secrets/pg-password.txt
  redis_password:
    file: ./secrets/redis-password.txt

volumes:
  postgres:
  redis:
  posts:

networks:
  public:

  private:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/19
          gateway: 10.0.0.1
